import React, { useState } from 'react'
import './SRTOptions.css'

interface SRTOptionsProps {
  onTypeSelect: (type: 'transcribe' | 'summarize' | 'srt') => void
  selectedType: 'transcribe' | 'summarize' | 'srt' | null
  isProcessing: boolean
}

const SRTOptions: React.FC<SRTOptionsProps> = ({
  onTypeSelect,
  selectedType,
  isProcessing
}) => {
  const [srtLanguage, setSrtLanguage] = useState<'original' | 'thai'>('original')

  return (
    <div className="processing-options">
      <h2>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•</h2>
      
      <div className="option-grid">
        <button
          className={`option-card ${selectedType === 'transcribe' ? 'selected' : ''}`}
          onClick={() => {
            console.log('üéØ [SRTOptions] User selected: transcribe')
            onTypeSelect('transcribe')
          }}
          disabled={isProcessing}
        >
          <div className="option-icon">üìù</div>
          <div className="option-title">‡∏ñ‡∏≠‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</div>
          <div className="option-desc">‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏π‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</div>
        </button>

        <button
          className={`option-card ${selectedType === 'summarize' ? 'selected' : ''}`}
          onClick={() => {
            console.log('üéØ [SRTOptions] User selected: summarize')
            onTypeSelect('summarize')
          }}
          disabled={isProcessing}
        >
          <div className="option-icon">üìã</div>
          <div className="option-title">‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤</div>
          <div className="option-desc">‡∏™‡∏£‡∏∏‡∏õ‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏à‡∏≤‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á</div>
        </button>

        <button
          className={`option-card ${selectedType === 'srt' ? 'selected' : ''}`}
          onClick={() => {
            console.log('üéØ [SRTOptions] User selected: srt')
            onTypeSelect('srt')
          }}
          disabled={isProcessing}
        >
          <div className="option-icon">üé¨</div>
          <div className="option-title">‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ã‡∏±‡∏ö‡πÑ‡∏ï‡πÄ‡∏ï‡∏¥‡πâ‡∏•</div>
          <div className="option-desc">‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ã‡∏±‡∏ö .srt ‡∏û‡∏£‡πâ‡∏≠‡∏° timing</div>
        </button>
      </div>

      {/* SRT Language Options */}
      {selectedType === 'srt' && (
        <div className="srt-language-options">
          <h3>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏©‡∏≤‡∏ã‡∏±‡∏ö‡πÑ‡∏ï‡πÄ‡∏ï‡∏¥‡πâ‡∏•</h3>
          <div className="language-buttons">
            <button
              className={`language-btn ${srtLanguage === 'original' ? 'selected' : ''}`}
              onClick={() => {
                console.log('üåê [SRTOptions] SRT language selected: original')
                setSrtLanguage('original')
              }}
              disabled={isProcessing}
            >
              üåê ‡∏†‡∏≤‡∏©‡∏≤‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö
            </button>
            <button
              className={`language-btn ${srtLanguage === 'thai' ? 'selected' : ''}`}
              onClick={() => {
                console.log('üáπüá≠ [SRTOptions] SRT language selected: thai')
                setSrtLanguage('thai')
              }}
              disabled={isProcessing}
            >
              üáπüá≠ ‡πÅ‡∏õ‡∏•‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ó‡∏¢
            </button>
          </div>
        </div>
      )}

      {/* Auto-Process Mode - No manual button needed */}
      {selectedType && (
        <div className="process-section">
          <div className="text-center p-4 bg-blue-50 rounded-lg border border-blue-200">
            <div className="text-blue-700 font-medium mb-1">
              üöÄ ‡πÇ‡∏´‡∏°‡∏î‡∏õ‡∏£‡∏∞‡∏°‡∏ßl‡∏ú‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
            </div>
            <div className="text-sm text-blue-600">
              ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
            </div>
          </div>
        </div>
      )}
    </div>
  )
}

export default SRTOptions
